---
# Task file to manage student credentials
# This file is included by the main playbook

- name: Check if credentials file exists locally
  delegate_to: localhost
  stat:
    path: "{{ credentials_file | default('./student-credentials.json') }}"
  register: local_credentials_file
  run_once: true

- name: Load existing credentials from local file
  delegate_to: localhost
  slurp:
    src: "{{ credentials_file | default('./student-credentials.json') }}"
  register: existing_credentials
  when: local_credentials_file.stat.exists
  run_once: true

- name: Parse existing credentials
  set_fact:
    student_credentials: "{{ (existing_credentials.content | b64decode | from_json).credentials }}"
  when: local_credentials_file.stat.exists and existing_credentials is defined
  run_once: true

- name: Generate random credentials when not provided
  set_fact:
    student_credentials: "{{ student_credentials | default([]) + [{'username': 'student' + (item | string), 'password': lookup('password', '/dev/null length=16 chars=ascii_letters,digits')}] }}"
  loop: "{{ range(1, student_count + 1) | list }}"
  when: not local_credentials_file.stat.exists
  run_once: true

- name: Save generated credentials to local file
  delegate_to: localhost
  copy:
    content: |
      {
        "generated_at": "{{ ansible_date_time.iso8601 }}",
        "domain": "{{ domain_name }}",
        "student_count": {{ student_count }},
        "credentials": {{ student_credentials | to_nice_json }}
      }
    dest: "{{ credentials_file | default('./student-credentials.json') }}"
    mode: '0600'
  when: not local_credentials_file.stat.exists
  run_once: true

- name: Display credential information
  debug:
    msg: |
      Student credentials loaded/generated:
      {% for student in student_credentials %}
      - Student {{ loop.index }}: {{ student.username }}/{{ student.password }}
      {% endfor %}
  run_once: true